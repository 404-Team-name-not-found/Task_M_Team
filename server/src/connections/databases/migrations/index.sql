/* Replace with your SQL commands */
BEGIN;
-- SCHEMA: public

-- DROP SCHEMA IF EXISTS public ;

CREATE SCHEMA IF NOT EXISTS public
AUTHORIZATION postgres;

COMMENT ON SCHEMA public
IS 'standard public schema';

GRANT ALL ON SCHEMA public TO PUBLIC;

GRANT ALL ON SCHEMA public TO postgres;


-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.



    CREATE TABLE IF NOT EXISTS public.comments
(
    id bigint NOT NULL,
    author bigint,
    content text COLLATE pg_catalog."default" NOT NULL,
    taskid bigint,
    creationdate date,
    CONSTRAINT "Messages_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.groups
(
    id bigint NOT NULL,
    name character varying COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default" NOT NULL,
    imgurl character varying COLLATE pg_catalog."default",
    CONSTRAINT "Groups_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.migrations
(
    id integer NOT NULL DEFAULT nextval('migrations_id_seq'::regclass),
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    run_on timestamp without time zone NOT NULL,
    CONSTRAINT migrations_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.sprints
(
    id bigint NOT NULL,
    name character varying COLLATE pg_catalog."default" NOT NULL,
    description character varying COLLATE pg_catalog."default",
    duration character varying COLLATE pg_catalog."default",
    startdate date,
    CONSTRAINT "Sprints_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.story
(
    id bigint NOT NULL,
    name character varying COLLATE pg_catalog."default" NOT NULL,
    icon character varying(10) COLLATE pg_catalog."default",
    color character varying COLLATE pg_catalog."default" NOT NULL DEFAULT 'colorless'::character varying,
    description text COLLATE pg_catalog."default" NOT NULL,
    startdate date NOT NULL,
    enddate date NOT NULL,
    CONSTRAINT "Story_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.tasks
(
    id bigint NOT NULL,
    name character varying COLLATE pg_catalog."default" NOT NULL,
    creationdate date NOT NULL,
    status character varying COLLATE pg_catalog."default" NOT NULL,
    assignedto bigint NOT NULL,
    creator bigint,
    sprintid bigint,
    storyid bigint,
    groupid bigint,
    description character varying COLLATE pg_catalog."default",
    estimation bigint,
    enddate date,
    CONSTRAINT "Tasks_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id bigint NOT NULL,
    username character varying(50) COLLATE pg_catalog."default" NOT NULL,
    password character varying COLLATE pg_catalog."default" NOT NULL,
    imgurl character varying COLLATE pg_catalog."default",
    title character varying COLLATE pg_catalog."default",
    role character varying COLLATE pg_catalog."default",
    email character varying COLLATE pg_catalog."default" NOT NULL,
    phone character varying(30) COLLATE pg_catalog."default",
    groupid bigint,
    name character varying COLLATE pg_catalog."default",
    CONSTRAINT "Users_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.usertypes
(
    id SERIAL,
    type text COLLATE pg_catalog."default",
    CONSTRAINT usertypes_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.comments
ADD CONSTRAINT "author_FK" FOREIGN KEY (author)
REFERENCES public.users (id) MATCH SIMPLE
ON UPDATE NO ACTION
ON DELETE NO ACTION
NOT VALID;


ALTER TABLE IF EXISTS public.comments
ADD CONSTRAINT "taskId_FK" FOREIGN KEY (taskid)
REFERENCES public.tasks (id) MATCH SIMPLE
ON UPDATE NO ACTION
ON DELETE NO ACTION
NOT VALID;


ALTER TABLE IF EXISTS public.tasks
ADD CONSTRAINT "assigedTo_FK" FOREIGN KEY (assignedto)
REFERENCES public.users (id) MATCH SIMPLE
ON UPDATE NO ACTION
ON DELETE NO ACTION
NOT VALID;


ALTER TABLE IF EXISTS public.tasks
ADD CONSTRAINT "creator_FK" FOREIGN KEY (creator)
REFERENCES public.users (id) MATCH SIMPLE
ON UPDATE NO ACTION
ON DELETE NO ACTION
NOT VALID;


ALTER TABLE IF EXISTS public.tasks
ADD CONSTRAINT "groupid_FK" FOREIGN KEY (groupid)
REFERENCES public.groups (id) MATCH SIMPLE
ON UPDATE NO ACTION
ON DELETE NO ACTION
NOT VALID;


ALTER TABLE IF EXISTS public.tasks
ADD CONSTRAINT "sprintID_FK" FOREIGN KEY (sprintid)
REFERENCES public.sprints (id) MATCH SIMPLE
ON UPDATE NO ACTION
ON DELETE NO ACTION
NOT VALID;


ALTER TABLE IF EXISTS public.tasks
ADD CONSTRAINT "storyID_FK" FOREIGN KEY (storyid)
REFERENCES public.story (id) MATCH SIMPLE
ON UPDATE NO ACTION
ON DELETE NO ACTION
NOT VALID;


ALTER TABLE IF EXISTS public.users
ADD CONSTRAINT "groupid_FK" FOREIGN KEY (groupid)
REFERENCES public.groups (id) MATCH SIMPLE
ON UPDATE NO ACTION
ON DELETE NO ACTION
NOT VALID;

END;